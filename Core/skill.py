#Core/skill.py

from abc import ABC, abstractmethod
from typing import Dict, Any

class Skill(ABC):
    """Base class for all skills. Each skill must describe itself and define how it handles input."""

    @abstractmethod
    def describe(self) -> Dict[str, Any]:
        """
        Returns metadata about the skill, including its name, triggers, and description.

        Returns:
            Dict[str, Any]: A dictionary containing skill metadata.
        """
        pass

    @abstractmethod
    async def handle(self, user_input: str, context: Dict[str, Any]) -> str:
        """
        Handles the input logic for this skill.

        Args:
            user_input (str): The user's input text.
            context (Dict[str, Any]): Additional context or state information.

        Returns:
            str: The response generated by the skill.
        """
        pass

